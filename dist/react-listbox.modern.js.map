{"version":3,"file":"react-listbox.modern.js","sources":["../src/Listbox.jsx","../src/utils/index.js","../src/ListboxButton.jsx","../src/ListboxLabel.jsx","../src/ListboxList.jsx","../src/ListboxOption.jsx"],"sourcesContent":["import React, { Component } from \"react\"\n\nexport const ListboxContext = React.createContext()\n\nexport class Listbox extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      typeahead: \"\",\n      listboxButtonRef: null,\n      listboxListRef: null,\n      isOpen: false,\n      activeItem: this.props.value,\n      values: null,\n      labelId: null,\n      buttonId: null,\n      optionIds: [],\n      optionRefs: [],\n    }\n  }\n\n  getActiveDescendant = () => {\n    const [, id] = this.state.optionIds.find(([value]) => value === this.state.activeItem) || [null, null]\n    return id\n  }\n\n  registerOptionId = (value, optionId) => {\n    this.unregisterOptionId(value)\n    this.setState(prevState => ({ optionIds: [...prevState.optionIds, [value, optionId]] } ))\n  }\n\n  unregisterOptionId = (value) => {\n    this.setState(prevState => ({ optionIds: prevState.optionIds.filter(([candidateValue]) => candidateValue !== value) }) )\n  }\n\n  type = (value) => {\n    this.setState(prevState => ({ typeahead: prevState.typeahead.concat(value) }), () => {\n      const [match] = this.state.optionRefs.find(([, ref]) => ref.innerText.toLowerCase().startsWith(this.state.typeahead.toLowerCase())) || [null]\n  \n      if (match !== null) { this.focus(match) }\n  \n      this.clearTypeahead()\n    })\n  }\n\n  clearTypeahead = () => { \n    setTimeout(() => {this.setState({ typeahead: \"\" }) }, 500)\n  }\n\n  registerOptionRef = (value, optionRef) => {\n    this.unregisterOptionRef(value)\n    this.setState(prevState => ({ optionRefs: [...prevState.optionRefs, [value, optionRef]] }))\n  }\n\n  unregisterOptionRef = (value) => {\n    this.setState(prevState => ({ optionRefs:  prevState.optionRefs.filter(([candidateValue]) => candidateValue !== value) }))\n  }\n\n  toggle = () => { this.state.isOpen ? this.close() : this.open() }\n\n  open = () => {\n    this.setState({ isOpen: true }, () => {\n      setTimeout(() => {\n        if (this.state.listboxListRef){\n          this.focus(this.props.value)\n          setTimeout(() => {this.state.listboxListRef.focus()}, 5)\n        }\n      }, 10)\n    })\n  }\n  \n  close = () => {\n    this.setState({ isOpen: false }, () => { this.state.listboxButtonRef.focus() })\n  }\n  \n  select = (value) => {\n    this.props.onChange(value)\n    setTimeout(() => {this.close() }, 5)\n  }\n  \n  focus = (value) => {\n    this.setState({ activeItem: value }, () => {\n      if (value === null){ return }\n      this.state.listboxListRef.children[this.state.values.indexOf(this.state.activeItem)].scrollIntoView({ block: \"nearest\" })\n    })\n  }\n\n  setListboxButtonRef = (ref) => { this.setState({ listboxButtonRef: ref })}\n  setListboxListRef = (ref) => { this.setState({ listboxListRef: ref })}\n  setButtonId = (id) => { this.setState({ buttonId: id })}\n  setLabelId = (id) => { this.setState({ labelId: id })}\n  setValues = (values) => { this.setState({ values })}\n  setActiveItem = (activeItem) => { this.setState({ activeItem })}\n\n  render(){\n    const { children, className } = this.props\n    const { isOpen } = this.state\n\n    const ProvidedContext = {\n      getActiveDescendant: this.getActiveDescendant,\n      registerOptionId: this.registerOptionId,\n      unregisterOptionId: this.unregisterOptionId,\n      registerOptionRef: this.registerOptionRef,\n      unregisterOptionRef: this.unregisterOptionRef,\n      toggle: this.toggle,\n      open: this.open,\n      close: this.close,\n      select: this.select,\n      focus: this.focus,\n      clearTypeahead: this.clearTypeahead,\n      typeahead: this.state.typeahead,\n      type: this.type,\n      setListboxListRef: this.setListboxListRef,\n      setListboxButtonRef: this.setListboxButtonRef,\n      listboxButtonRef: this.state.listboxButtonRef,\n      listboxListRef: this.state.listboxListRef,\n      isOpen: this.state.isOpen,\n      activeItem: this.state.activeItem,\n      setActiveItem: this.setActiveItem,\n      values: this.state.values,\n      setValues: this.setValues,\n      labelId: this.state.labelId,\n      setLabelId: this.setLabelId,\n      buttonId: this.state.buttonId,\n      setButtonId: this.setButtonId,\n      props: this.props,\n    }\n\n    return (\n      <ListboxContext.Provider value={ProvidedContext}>\n        <div className={className}>\n          { typeof children === \"function\" ? children({ isOpen }) : children }\n        </div>\n      </ListboxContext.Provider>\n    )\n  }\n}\n\nexport default null\n","let id = 0\n\nexport const generateId = () => `tailwind-ui-listbox-id-${++id}`\n\nexport default null","import React, { Component } from \"react\"\nimport { ListboxContext } from \"./Listbox\"\nimport { generateId } from \"./utils\"\n\nexport class ListboxButton extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      id: generateId(),\n      isFocused: false,\n    }\n  }\n  \n  componentDidMount(){\n    this.context.setButtonId(this.state.id)\n    this.context.setListboxButtonRef(this.ownRef)\n  }\n  \n  focus = () => this.setState({ isFocused: true })\n  blur = () => this.setState({ isFocused: false })\n\n  render(){\n    const { children, className } = this.props\n    const { isFocused } = this.state\n    return (\n      <button\n        aria-haspopup=\"listbox\"\n        aria-labelledby={`${this.context.labelId} ${this.state.id}`}\n        className={className}\n        id={this.state.id}\n        onBlur={this.blur}\n        onClick={this.context.toggle}\n        onFocus={this.focus}\n        ref={el => this.ownRef = el}\n        type=\"button\"\n        {...(this.context.isOpen ? { \"aria-expanded\": \"true\" } : {})}\n      > \n        { typeof children === \"function\" ? children({ isFocused }) : children }\n      </button>\n    )\n  }\n}\n\nListboxButton.contextType = ListboxContext\nexport default null","import React, { Component } from \"react\"\nimport { ListboxContext } from \"./Listbox\"\nimport { generateId } from \"./utils\"\n\nexport class ListboxLabel extends Component {\n  constructor(props){\n    super(props)\n    this.state = { id: generateId() }\n  }\n\n  componentDidMount(){\n    this.context.setLabelId(this.state.id)\n  }\n\n  render(){\n    const { children, className } = this.props\n    return (\n      <span className={className} id={this.state.id}>{children}</span>\n    )\n  }\n} \n\nListboxLabel.contextType = ListboxContext\n\nexport default null","import React, { Component } from \"react\"\nimport { ListboxContext } from \"./Listbox\"\n\nfunction isString(value) {\n  return typeof value === \"string\" || value instanceof String\n}\n\nexport class ListboxList extends Component {\n  constructor(props){\n    super(props)\n    this.state = { focusedIndex: null, values: null }\n  }\n\n  componentDidMount(){\n    this.context.setListboxListRef(this.ownRef)\n    const values = this.props.children.map(node => node.props.value)\n    this.setState({ values }, () => { this.context.setValues(values) })\n  }\n\n  handleBlur = (e) => {\n    if (e.relatedTarget === this.context.listboxButtonRef){ return } // The button will already handle the toggle for us\n    this.context.close()\n  }\n\n  handleKeydown = (e) => {\n    const focusedIndex = this.state.values.indexOf(this.context.activeItem )\n\n    let indexToFocus\n    switch (e.key) {\n    case \"Esc\":\n    case \"Escape\":\n      e.preventDefault()\n      this.context.close()\n      break\n    case \"Tab\":\n      e.preventDefault()\n      break\n    case \"Up\":\n    case \"ArrowUp\":\n      e.preventDefault()\n      indexToFocus = focusedIndex - 1 < 0 ? this.state.values.length - 1 : focusedIndex - 1\n      this.context.focus(this.state.values[indexToFocus])\n      break\n    case \"Down\":\n    case \"ArrowDown\":\n      e.preventDefault()\n      indexToFocus = focusedIndex + 1 > this.state.values.length - 1 ? 0 : focusedIndex + 1\n      this.context.focus(this.state.values[indexToFocus])\n      break\n    case \"Spacebar\":\n    case \" \":\n      e.preventDefault()\n      if (this.context.typeahead !== \"\") {\n        this.context.type(\" \")\n      } else {\n        this.context.select(this.context.activeItem || this.context.props)\n      }\n      break\n    case \"Enter\":\n      e.preventDefault()\n      this.context.select(this.context.activeItem || this.context.props)\n      break\n    default:\n      if (!(isString(e.key) && e.key.length === 1)) {\n        return\n      }\n\n      e.preventDefault()\n      this.context.type(e.key)\n      return\n    }\n  }\n\n  handleMouseLeave = () => {\n    this.context.setActiveItem(null)\n  }\n\n  render(){\n    const { children, className } = this.props\n    return (\n      <ul\n        aria-activedescendant={this.context.getActiveDescendant()}\n        aria-labelledby={this.context.props.labelledby}\n        className={className}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeydown}\n        onMouseLeave={this.handleMouseLeave}\n        ref={el => this.ownRef = el}\n        role=\"listbox\"\n        tabIndex={-1}\n      >\n        {children}\n      </ul>\n    )\n  }\n} \n\nListboxList.contextType = ListboxContext\n\nexport default null","import React, { Component } from \"react\"\nimport { ListboxContext } from \"./Listbox\"\nimport { generateId } from \"./utils\"\n\nexport class ListboxOption extends Component {\n  constructor(props){\n    super(props)\n    this.state = { id: generateId() }\n  }\n\n  componentDidMount(){\n    this.context.registerOptionRef(this.props.value, this.ownRef)\n    this.context.registerOptionId(this.props.value, this.state.id)\n  }\n  \n  componentWillUnmount(){\n    this.context.unregisterOptionId(this.props.value)\n    this.context.unregisterOptionRef(this.props.value)\n  }\n\n  handleClick = () => {\n    this.context.select(this.props.value)\n  }\n\n  handleMouseMove = () => {\n    if (this.context.activeItem === this.props.value) { return } // this option is already active\n\n    this.context.setActiveItem(this.props.value)\n  }\n\n  render(){\n    const { children, className } = this.props\n    const isActive = this.context.activeItem === this.props.value\n    const isSelected = this.context.props.value === this.props.value\n    return (\n      <li\n        className={className}\n        id={this.state.id}\n        onClick={this.handleClick}\n        onMouseMove={this.handleMouseMove}\n        ref={el => this.ownRef = el}\n        role=\"option\"\n        {...isSelected ? { \"aria-selected\": true } : {}}\n      >\n        { typeof children === \"function\" ? children({ isSelected, isActive }) : children }\n      </li>\n    )\n  }\n} \n\nListboxOption.contextType = ListboxContext\nexport default null"],"names":["ListboxContext","React","createContext","Listbox","Component","constructor","props","super","this","getActiveDescendant","id","state","optionIds","find","value","activeItem","registerOptionId","optionId","unregisterOptionId","setState","prevState","filter","candidateValue","type","typeahead","concat","match","optionRefs","ref","innerText","toLowerCase","startsWith","focus","clearTypeahead","setTimeout","registerOptionRef","optionRef","unregisterOptionRef","toggle","isOpen","close","open","listboxListRef","listboxButtonRef","select","onChange","children","values","indexOf","scrollIntoView","block","setListboxButtonRef","setListboxListRef","setButtonId","buttonId","setLabelId","labelId","setValues","setActiveItem","render","className","Provider","h","generateId","ListboxButton","isFocused","blur","componentDidMount","context","ownRef","el","aria-expanded","contextType","ListboxLabel","ListboxList","handleBlur","e","relatedTarget","handleKeydown","focusedIndex","indexToFocus","key","preventDefault","length","String","handleMouseLeave","map","node","aria-activedescendant","aria-labelledby","labelledby","onBlur","onKeyDown","onMouseLeave","role","tabIndex","ListboxOption","handleClick","handleMouseMove","componentWillUnmount","isActive","isSelected","aria-selected"],"mappings":"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"}